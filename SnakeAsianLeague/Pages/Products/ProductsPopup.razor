@using SnakeAsianLeague.Data.Entity
@using SnakeAsianLeague.Data.Services
@using SnakeAsianLeague.Data.Services.Products


@inject ProductsService ProductsService;
@inject AppState AppState

<head>
    <link href="css/Popup.css" rel="stylesheet" />
</head>

 @* 點擊products-popup-close，移除products-popup-open，關閉彈窗 *@

<section class="products-popup-bg-x" id="products-popupblock-Name">
    
    <div class="products-popupblock" >
       
        <svg class="products-popup-close" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" width="25">
            <path id="" data-name="" d="M10,10,0,20,10,10,0,0,10,10,20,0,10,10,20,20Z" transform="translate(2.5 2.5)"
                fill="none" stroke="#67ada2" stroke-linecap="round" stroke-linejoin="round" stroke-width="5" />
        </svg>

        <div class="products-popup-title">Rider's Name</div>
        <div class="products-popup-content">
            <div class="products-popup-text">Pleas Click the Save to change your Rider's name.</div>
            <input class="products-popup-inputText" type="text" value="初串原始value再供修改" placeholder="The 20 character limit input">
            <div class="products-popup-error">(字數超過時才出現)The number of characters is limited to 20.</div>
        
            <button class="products-popup-submit" type="submit">SAVE</button>
        </div>
    </div>
</section>


@* 點擊products-popup-close，移除products-popup-open，關閉彈窗 *@

<section class="products-popup-bg-x" id="products-popupblock-AppearanceFee">
    <div class="products-popupblock" id="">        
        <svg class="products-popup-close" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" width="25">
            <path id="" data-name="" d="M10,10,0,20,10,10,0,0,10,10,20,0,10,10,20,20Z" transform="translate(2.5 2.5)"
                fill="none" stroke="#67ada2" stroke-linecap="round" stroke-linejoin="round" stroke-width="5" />
        </svg>

        <div class="products-popup-title">Rider's Appearance Fee</div>
        <div class="products-popup-content">
            <div class="products-popup-text">Pleas enter number only for your RAF.</div>
     @*       <EditForm Model="model">
                <InputSelect ValueExpression="@(()=>model.CoinType)"  Value="@model.CoinType" ValueChanged="@((int value) => SelectOptionChange(value ))" >
                                    
                         <option class="my_match_option" value="1">gSRC</option>
                         <option class="my_match_option" value="22">Gold</option>
                </InputSelect>

            </EditForm>*@
            <div class="input-zone">
                <select @bind=@ReceiveCurrency> @* @onchange="(value)=>{ReceiveCurrency =  Int32.Parse(value.Value.ToString());}"*@
                    <option class="my_match_option" value="1">Gmd</option>
                    <option class="my_match_option" value="22">gSRC</option>
                </select>

                @if (  ReceiveCurrency == 1)
                {
                    <input  class="products-popup-inputText" type="number" min = "0.01"  step = "0.01"  @bind="@ChangeGoldRent" >     
                }
                else if (  ReceiveCurrency == 22)
                {
                    <input  class="products-popup-inputText" type="number" min = "0.01"  step = "0.01"  @bind="@ChangeRent" >     
                }
                else
                {
                   <input  class="products-popup-inputText" type="number" min = "0.01"  step = "0.01"   >     
                }

                   
            </div>
            
            <button class="products-popup-submit" type="submit" onclick=@SetChangeRent>SAVE</button>
        </div>
    </div>
</section>

@* 點擊products-popup-close，移除products-popup-open，關閉彈窗 *@
@*<section class="products-popup-bg-x" id="products-popupblock-AppearanceFee">
    <div class="products-popupblock" id="">
        
        <svg class="products-popup-close" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" width="25">
            <path id="" data-name="" d="M10,10,0,20,10,10,0,0,10,10,20,0,10,10,20,20Z" transform="translate(2.5 2.5)"
                fill="none" stroke="#67ada2" stroke-linecap="round" stroke-linejoin="round" stroke-width="5" />
        </svg>

        <div class="products-popup-title">Rider's Appearance Fee</div>
        <div class="products-popup-content">
            <div class="products-popup-text">Pleas enter number only for your RAF.</div>
            <input  class="products-popup-inputText" type="number" min = "1"  step = "1"  @bind="@NowGoldRent" >        
            <button class="products-popup-submit" type="submit" onclick=@SetChangeGoldRent>SAVE</button>
        </div>
    </div>
</section>*@


@code {

    [Parameter]
    public decimal NowRent { get; set; }

    [Parameter]
    public string TokenID { get; set; }

    [Parameter]
    public decimal NowGoldRent { get; set; }

    [CascadingParameter] 
    int ReceiveCurrency { get; set; }

    public NowRentAndTotalRevenue Income{ get; set; }

    public decimal ChangeRent { get; set; }
    public decimal ChangeGoldRent { get; set; }



    protected override async Task OnInitializedAsync()
    {

    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Refresh();          
        }
    }


    private async Task Refresh()
    {


        //SelectOptionChange(ReceiveCurrency);
        ChangeRent = NowRent;
        ChangeGoldRent = NowGoldRent;
        StateHasChanged();
    }


    /// <summary>
    /// 修改gSRC租金
    /// </summary>
    private async void SetChangeRent()
    {
        string walletAddress = AppState.LoginStatus.walletAddress;


        decimal Price = 0;

        if (ReceiveCurrency == 1)
        {
            Price = ChangeGoldRent;
        }
        else if (ReceiveCurrency == 1)
        {
            Price = ChangeRent;
        }

        await ProductsService.ChangeRent(walletAddress, TokenID, Price, ReceiveCurrency);
        Income = await ProductsService.Get_NowRentAndTotalRevenue("#" + TokenID);
        NowRent = Income.nowRent.Where(m => m.currencyType == 22).First().price;
        ChangeRent = Math.Round(NowRent, 3, MidpointRounding.AwayFromZero);
        NowGoldRent = Income.nowRent.Where(m => m.currencyType == 1).First().price;
        ChangeGoldRent = Math.Round(NowGoldRent, 3, MidpointRounding.AwayFromZero);
        StateHasChanged();
    }
}