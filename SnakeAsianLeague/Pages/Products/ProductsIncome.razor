
@using SnakeAsianLeague.Data.Entity
@using SnakeAsianLeague.Data.Services
@using SnakeAsianLeague.Data.Services.Products
@inject ProductsService ProductsService;
@inject AppState AppState




    @if (Income != null)
    {
        <section class="products-section" id="products-Income">
            <div class="products-block">
                <div class="products-block-title" data-i18n="Inventory_data:NFTDetails.Income">Income</div>
                <div class="products-block-02"  id="products-block-02-Income">
                    <div class="products-block-title-02" data-i18n="Inventory_data:NFTDetails.TotalIncome">Total Income</div>
                    <div class="products-block-price" id="">

                        <div class="products-block-price-currency">
                            <p class="products-currency-title">gSRC</p>
                            <img class="products-currency-icon products-currency-SRC" id="" src="/images/Products/SRC.webp"
                            alt="">
                        </div>
                        <div class="products-TopBid-price">@TotalRevenue</div>
                    </div>

                    <div class="products-block-price" id="">

                        <div class="products-block-price-currency">
                            <p class="products-currency-title">Gem</p>
                            <img class="products-currency-icon products-currency-SRC" id="" src="/images/Myprofile/gold.png"
                            alt="">
                        </div>
                        <div class="products-TopBid-price">@TotalGoldRevenue</div>
                    </div>
                    @*<div class="products-TopBid-price-higher">Higher than 70%(後端串) PPSR</div>*@
                    @* 該NFT出租累積所有金額，首拍時 直接顯示 on debut (未有收入)
                        與所有NFT相比其收入的排名百分比全部NFT為100隻，其收入為前20名顯示 Higher than 80% PPRS若是百分比低於50%則不顯示*@
                   
                        @*先藏起來*@ 
                 @*   <div class="products-block-title-02" style="margin-top: 20px;" data-i18n="Inventory_data:NFTDetails.RiderFee">Rider’s Appearance Fee</div>
                    <div class="products-block-price" id="products-AppearanceFee">

                        <div class="products-block-price-currency">
                            <p class="products-currency-title">gSRC</p>
                            <img class="products-currency-icon products-currency-SRC" id="" src="/images/Products/SRC.webp"
                            alt="">
                        </div>
                        <div class="products-TopBid-price @(isSamaWalletAddress ? "Owned-edit" : null)"    id="AppearanceFee-edit">
                            <div class="products-TopBid-price-value"></div>
                            <img class="edit-icon" src="/images/Products/edit_icon.png" alt="">
                        </div>
                    </div>*@
                @if (isSamaWalletAddress)
                {
                    
                    <div class="products-block-title-02" style="margin-top: 20px;" data-i18n="Inventory_data:NFTDetails.RiderFee">Rider’s Appearance Fee</div>
                    <div class="products-block-price" id="products-AppearanceFee">

                        <div class="products-block-price-currency">
                     
                            
                        

                           
                    @if (ReceiveCurrency == 1)
                    {
                         @*顯示星鑽*@
                        <p class="products-currency-title">Gem</p>
                        <img class="products-currency-icon products-currency-Gem" id="" src="/images/Myprofile/gold.png" alt=""> 
                    }
                    else if (ReceiveCurrency == 22)
                    {
                         @*顯示gSRC*@
                        <p class="products-currency-title">gSRC</p>
                        <img class="products-currency-icon products-currency-SRC" id="" src="/images/Products/SRC.webp"alt=""> 

                    }
                    </div>
                        <div class="products-TopBid-price @(isSamaWalletAddress ? "Owned-edit" : null)"    id="AppearanceFee-edit">
                    


                                    
                            @if (ReceiveCurrency == 1)
                            {
                                 @*顯示星鑽*@
                                <div class="products-TopBid-price-value"> @NowGoldRent </div>
                            }
                            else if (ReceiveCurrency == 22)
                            {
                                 @*顯示gSRC*@
                                <div class="products-TopBid-price-value"> @NowRent </div>
                            }


                            <img class="edit-icon" src="/images/Products/edit_icon.png" alt="">
                        </div>
                    </div>
                    
                }

                

                </div>



            </div>



        </section>    
        
        <ProductsPopup  NowRent =@NowRent     TokenID =@TokenID    NowGoldRent =@NowGoldRent     />
    }


@code{

    [Parameter]
    public string TokenID { get; set; }

    [Parameter]
    public string SerialNumber { get; set; }

   
    [CascadingParameter] 
    int ReceiveCurrency { get; set; }

    [Parameter]
    public decimal NowRent { get; set; }

    [Parameter]
    public decimal NowGoldRent { get; set; }

    public NowRentAndTotalRevenue Income{ get; set; }



    //public int currencyType{ get; set; }

    public decimal TotalRevenue { get; set; }
    public decimal TotalGoldRevenue { get; set; }
    public bool isSamaWalletAddress { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await Refresh();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Refresh();          
        }
    }

    private async Task Refresh()
    {       
        Income = await ProductsService.Get_NowRentAndTotalRevenue("#" +TokenID);
        NowRent = Income.nowRent.Where(m => m.currencyType == 22).First().price;
        NowRent = Math.Round(NowRent, 3, MidpointRounding.AwayFromZero);
        NowGoldRent = Income.nowRent.Where(m => m.currencyType == 1).First().price;        
        NowGoldRent = Math.Round(NowGoldRent, 3, MidpointRounding.AwayFromZero);
        TotalRevenue = Income.totalRevenue.Where(m => m.currencyType == 22).First().price;
        TotalRevenue = Math.Round(TotalRevenue, 3, MidpointRounding.AwayFromZero);
        TotalGoldRevenue = Income.totalRevenue.Where(m => m.currencyType == 1).First().price;
        TotalGoldRevenue = Math.Round(TotalGoldRevenue, 3, MidpointRounding.AwayFromZero);
        string OwnedWalletAddress = await ProductsService.GetNFT_Unit_Owned(SerialNumber);
        string  walletAddress = AppState.LoginStatus.walletAddress; 
        isSamaWalletAddress = walletAddress == OwnedWalletAddress;




        isSamaWalletAddress = true;
        StateHasChanged();
    }

    //public void changeisSamaWalletAddress()
    //{
    //    isSamaWalletAddress =false
    //}



}