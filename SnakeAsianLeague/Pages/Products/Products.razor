@page "/products/{SerialNumber}/{TokenID}"
@using SnakeAsianLeague.Data.Entity
@using SnakeAsianLeague.Data.Services.Products



@inject ProductsService ProductsService;
@inject IJSRuntime JS

@*@using static SnakeAsianLeague.Data.Services.Products.ProductsService*@


<head>
    <title>PonPonSnake 碰碰蛇｜Products</title>
    <link href="css/Products.css" rel="stylesheet" />
</head>


<div class="products-background"></div>

<div class="products-wrapper" hidden="@(false)">
    <div class="products-summary">
        <ProductsImage Ridder =@Ridder   TokenID =@TokenID />
        <ProductsIncome Ridder =@Ridder TokenID =@TokenID />
    </div>
    <div class="products-main">
        <ProductsTopBid TokenID =@TokenID />
       
        <ProductsAttributes Ridder =@Ridder />
        <ProductsStats Ridder =@Ridder/>
        <ProductsAvatars Ridder =@Ridder/>
        <ProductsSkills Ridder =@Ridder/>
    </div>
    @*<ProductsPopup />*@
</div>
















@code {

    [Parameter]
    public string SerialNumber { get; set; }

    [Parameter]
    public string TokenID { get; set; }
    

    [Parameter]
    public RiderIntroduce Ridder { get; set; }


    protected override async Task OnInitializedAsync()
    {
       
    }

    private async Task Refresh()
    {
       Ridder =await ProductsService.GetNFT_Unit_SerialNumber(SerialNumber ,TokenID );
        StateHasChanged();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Refresh();
            await JS.InvokeVoidAsync("installI18n");
            await JS.InvokeVoidAsync("TippyInit");
            await JS.InvokeVoidAsync("heartClick");
            await JS.InvokeVoidAsync("FilterArrowSlideClick");
            await JS.InvokeVoidAsync("Popup");

        }

    }
}