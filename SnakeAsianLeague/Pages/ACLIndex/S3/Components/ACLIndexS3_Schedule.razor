@using SnakeAsianLeague.Data.Entity.Config
@using SnakeAsianLeague.Data.Entity.SnakeServer
@using SnakeAsianLeague.Data.Services
@using SnakeAsianLeague.Data.Services.SnakeServerService
@using System.Text.Json

@inject AppState AppState
@inject IJSRuntime JS
@inject AsiaLeagueScheduleService AsiaLeagueScheduleService
@implements IDisposable
<head>
        <link href="css/ACLIndex/S3/S3calendar.css" rel="stylesheet" />
</head>

<div  class="Schedule-Container" >  
    <div class="Schedule-bottomPlate">

    </div>
    <div class="Schedule">
        <h2 id="Schedule" class="Schedule-title" >- <span data-i18n="Asian_data:main.Schedule" >Schedule</span>  -</h2>
        <div class="Schedule-BG-Container">
            <img class="Schedule-Group" src="/images/AsiaChampionsLeague/S3/Calender/Group.webp" data-i18n="[src]Asian_data:main.Group"> 

            <div class="Schedule-BG">

                @if (Schedules != null)
                {
                     <div id='S3calendar'></div>                    
                }                              
   
            </div>
            <img class="Schedule-Group-2" src="/images/AsiaChampionsLeague/S3/Calender/Group.webp" data-i18n="[src]Asian_data:main.Group"> 
        </div>
</div>

</div>




@code {

    private bool pop;

    @*  public int daySquare = 42;*@
    public int[][] daySquare = new int[][]
    {
         @* 總格子數，總天數，第幾天開始*@
         new int[] {  42 ,31 ,5 },
         new int[] {  42 ,31 ,1},
         new int[] {  42 ,30 ,4 },
         new int[] {  42 ,31 ,6  }
    };
    @*比賽日*@
    public int[][] matchDate  = new int[][]
    {
         new int[] {  18 ,19 ,20, 21 ,22,23 ,25,26,27,28,29,30},
         new int[] {  1 ,2,3,4,5,6,15,16,17,18,19,20,22,23,24,25,26,27,29,30,31},
         new int[] {  1 ,2,3,12,13,14,15,16,17,19,20,21,22,23,24,26,27,28,29,30},
         new int[] {  1 ,10 ,11 ,12,13,14,15 }
    };
    @*決賽*@
    public int[][]  finalsDate= new int[][]
    {
         new int[] {  23,30},
         new int[] {  6 ,20,27},
         new int[] {  3 ,17 ,24 },
         new int[] {  1,15}
    };

    public  int finalsNum = 0 ;
    public string[][]  finalsString= new string[][]
    {
         new string[] {"W1 Silver Final (Squad)" ,"PopR"},
         new string[] {"W2 Silver Final (Squad)","PopR"},
         new string[] {"M1 Diamond Final (Squad)","PopR"},
         new string[] {"W3 Silver Final (Squad)","PopR"},
         new string[] {"W4 Silver Final (Squad)","PopR"},
         new string[] {"M2 Diamond Final (Squad)","PopR"},
         new string[] {"W5 Silver Final (Squad)","PopR"},
         new string[] {"W6 Silver Final (Squad)","PopR"},
         new string[] {"M3 Diamond Final (Squad)","PopR"},
         new string[] {"S1 Silver Final (Squad)","PopR"},
    };

    public int nowDay;

    List<AsiaLeagueSchedule> Schedules;

    [Parameter]
    public EventCallback reload { get; set; } 

    void IDisposable.Dispose()
    {
        AppState.StateChanged -= async (Source, Property)
            => await InvokeAsync(StateHasChanged);
    }
    private async Task AppState_StateChanged(ComponentBase Source, string Property)
    {
        if (Source != this)
        {
            await InvokeAsync(StateHasChanged);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        AppState.StateChanged += async (Source, Property)
            => await InvokeAsync(StateHasChanged);

        Schedules = await AsiaLeagueScheduleService.GetAsiaLeagueSchedulesAsync(AsiaLeagueSeasons.AsiaLeagueS3);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            
        }
        await reloadCalendar(); 
    }
    public async Task reloadCalendar()
    {
        if (Schedules != null)
        {
             await JS.InvokeVoidAsync("S3Calendar",AppState.NowLanguage.ToString(),Schedules);      
        }
       
    }



  
}
