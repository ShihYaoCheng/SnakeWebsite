@page "/MyprofileSidebar"
@using SnakeAsianLeague.Data.Entity.View
@using SnakeAsianLeague.Data.Services
@inject GetUrlView GetUrlView
@inject AppState AppState
@inject IJSRuntime JS

<head>
    <link href="css/Sidebar.css" rel="stylesheet" />
</head>

<aside class="myprofileSidebar">
    <div class="myprofileSidebarButton">
        <img src="/images/Myprofile/sidebarLine.webp" alt="">
    </div>
    <div class="myprofileSidebarBlock">
        <div class="accountManagement">Account<br>Management</div>
        <ul class="accountManagementUl">
            <a href="myprofile/index" id="accountManagementUl-Account" class=""><li data-i18n="Sidebar.Account">Account</li></a>
            <a href="myprofile/mymatch" id="accountManagementUl-eSport"><li data-i18n="Sidebar.Esports">eSport</li></a>
            <a href="myprofile/myawardnotice" id="accountManagementUl-Reward"><li data-i18n="Sidebar.Reward">Reward</li></a>

            @if (IsMobile)
            {
                    @if (!IsInMetaMask)
                    {
                        <a href=@inventoryUrl id="accountManagementUl-Inventory" hidden="@(false)"><li data-i18n="Sidebar.Inventory">Inventory</li></a>          
                        <a href=@swapsrcUrl id="accountManagementUl-SwapSRC" ><li data-i18n="Sidebar.Swap">Swap</li></a>
                        <a href=@srcgiftUrl id="accountManagementUl-SRCPackage" ><li data-i18n="Sidebar.SRCPackage">SRC Package</li></a>
                    }
                    else
                    {
                        <a href="myprofile/inventory" id="accountManagementUl-Inventory" hidden="@(false)"><li data-i18n="Sidebar.Inventory">Inventory</li></a>          
                        <a href="myprofile/swapsrc" id="accountManagementUl-SwapSRC" ><li data-i18n="Sidebar.Swap">Swap</li></a>
                        <a href="myprofile/srcgift" id="accountManagementUl-SRCPackage" ><li data-i18n="Sidebar.SRCPackage">SRC Package</li></a>
                    }
                                    
            }else{
                <a href="myprofile/inventory" id="accountManagementUl-Inventory" hidden="@(false)"><li data-i18n="Sidebar.Inventory">Inventory</li></a>          
                <a href="myprofile/swapsrc" id="accountManagementUl-SwapSRC" ><li data-i18n="Sidebar.Swap">Swap</li></a>
                <a href="myprofile/srcgift" id="accountManagementUl-SRCPackage" ><li data-i18n="Sidebar.SRCPackage">SRC Package</li></a>
            }

            <a href="myprofile/referralCode/@(AppState.LoginStatus.userID.ToString())" id="accountManagementUl-referralCode" ><li data-i18n="Sidebar.referralCode">referralCode</li></a>
        </ul>
    </div>
</aside>


@code {

    bool IsMobile = false;
    bool IsInMetaMask= false;
    private IJSObjectReference? IsMobileJS;


    string url;
    string inventoryUrl;
    string swapsrcUrl;
    string srcgiftUrl;
    protected override async Task OnInitializedAsync()
    {
        url =await GetUrlView.GetUrl();
        inventoryUrl = "https://metamask.app.link/dapp/" + url +"/myprofile/inventory";
        swapsrcUrl ="https://metamask.app.link/dapp/" + url +"/myprofile/inventory";
        srcgiftUrl = "https://metamask.app.link/dapp/" + url + "/myprofile/srcgift";
    }
      protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("myprofileSidebar");
            await JS.InvokeVoidAsync("installI18n");
            IsMobileJS = await JS.InvokeAsync<IJSObjectReference>("import", "./JavaScript/SharedLib/IsMobile.js");
        }
        IsMobile =await IsMobileJS.InvokeAsync<bool>("IsMobile");
        IsInMetaMask  = await IsMobileJS.InvokeAsync<bool>("IsInMetaMask");
    }

}
