@using SnakeAsianLeague.Data.Services.BlockChain
@using SnakeAsianLeague.Pages.Myprofile.Components.Index_Components
@using SnakeAsianLeague.Pages.Myprofile.Components.Shared_Components
@inject IConfiguration Configuration
@inject BlockChainProcessorSever BlockChainSever
@inject BlockChainProcessorSever linebot;
@inject IJSRuntime JS

<head>
    <link href="css/MyProfile/SRCSwap.css" rel="stylesheet" />
</head>

@*右上角顯示錢包地址*@
<Walletaddress></Walletaddress>

<div class="SRCExchange-container">
    <div class="Swap-Title" data-i18n="Sidebar.Swap">Swap</div>

   
    @*<h2 class="SRCExchange-h2">SRC exchange</h2>*@
    <div class="coinView-container">
        <p class="coinView-Minimum">
            @*Minimum: 1 SRC*@
        </p>
        <p class="coinView-GameWalletText">
            @*From Game Wallet*@ 
        </p>
      
        <div class="changeCoinZone">
            @*貨幣文字區塊*@
            <div class="coin-TextZone coin-TextZone-coinName">
                <div class="coin-Zone">
                    <p class="exchangeRate">
                        <p class="coinView-Minimum " data-i18n="Inventory_data:SWAP.Minimum">
                            Minimum: 1 SRC
                        </p>
                    </p>
                    <div class="coin-type" id="coin-type-SRC">
                        <div class="coin-type-icon">
                            <img class="" id="SRC-img" src="/images/Myprofile/tokenSRC.webp"/>
                        </div>
                        
                        <p class="coin-type-name">SRC</p>
                        
                        <button class="coin-type-addWallet tippy-pop" data-content="Add Tokens To MetaMask Wallet" @onclick="AddSRC" src="/images/Myprofile/SRCExchange/addCoin.png"></button>

                    </div>
                    <p id="SRCTotalBalance" class="avaliable"><span data-i18n="Inventory_data:SWAP.Balance">Balance:</span>   @SRCTotal</p>

                </div>
                <div class="coin-Zone coin-Zone-mobile">
                            <p class="exchangeRate" id="usdPerSRCRate">
                                    ≈$@SwapRate  USD
                            </p>
                            <div class="coin-Num-block">
                                <input class="coin-Num" value=@SRCInput @onchange="(e)=>{SRCInputChange(e.Value.ToString());}"/>
                                <div class="maxBTN-Zone">
                                    <button @onclick="maxBTN" class="maxBTN" data-i18n="Inventory_data:SWAP.MAX">MAX</button>  
                                </div>
                            </div>
                            @if (BalanceShort)
                            {                        
                                <div class="balanceShort">
                                    <svg class="balanceShort-icon" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 30.783 29.005">
                                        <g id="warning-outline" transform="translate(-2.609 -3.497)">
                                            <path id="Path_4" data-name="Path 4" d="M6.017,31.377H29.984a2.25,2.25,0,0,0,1.981-3.317L19.981,5.806a2.251,2.251,0,0,0-3.963,0L4.036,28.06a2.25,2.25,0,0,0,1.981,3.317Z" fill="none" stroke="#ec847b" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.25"/>
                                            <path id="Path_5" data-name="Path 5" d="M17.6,13.738l.4,8.578.4-8.575A.4.4,0,0,0,18,13.319h0a.4.4,0,0,0-.4.418Z" fill="none" stroke="#ec847b" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.25"/>
                                            <path id="Path_6" data-name="Path 6" d="M18,27.932a1.406,1.406,0,1,1,1.406-1.406A1.406,1.406,0,0,1,18,27.932Z" fill="#ec847b"/>
                                        </g>
                                    </svg>

                                    餘額不足
                                </div>
                            }
                    
                    </div>

                <div class="coin-Zone arrowZone">
        
                     <img class="arrow-img coin-Zone-mobile" src="/images/Myprofile/SRCExchange/Arrow.png"/>

                </div>
                <div class="coin-Zone">
        
                    <div class="coin-type" id="coin-type-USDT">
                        <div class="coin-type-icon">
                            <img class="" id="usdt-img" src="/images/Myprofile/SRCExchange/tether-usdt-logo.png"/>
                        </div>

                        <p class="coin-type-name">USDT</p>
                        
                        <button class="coin-type-addWallet tippy-pop" data-content="Add Tokens To MetaMask Wallet" @onclick="AddUSDT" src="/images/Myprofile/SRCExchange/addCoin.png"></button>

                    </div>
                    <p id="USDTTotalBalance" class="avaliable"><span data-i18n="Inventory_data:SWAP.Balance">Balance:</span>  @USDTTotal</p>

                </div>

                 <div class="coin-Zone coin-Zone-mobile">         
                    @*<input class="coin-Num" value=@USDTInput @onchange="(e)=>{USDTInputChange(e.Value.ToString());}"/>*@
                    <div class="coin-swapRate" id="usdtPerSRCRate"> 1 SRC ≈$ @SwapRate USDT</div>
                    
                    <div class="coin-Num-block">
                        <div  class="coin-Num" >@USDTInput </div>
                        <div class="maxBTN-Zone">
                            @* <button @onclick="maxBTN" class="maxBTN" data-i18n="Inventory_data:SWAP.MAX">MAX</button>   *@
                        </div>
                    </div>
                </div>
            </div>
            @*貨幣數字區塊*@
            <div class="coin-NumZone">
                <div class="coin-Zone">
                        <p class="exchangeRate" id="usdPerSRCRate">
                                ≈$@SwapRate  USD
                        </p>
                        <div class="coin-Num-block">
                            <input class="coin-Num" value=@SRCInput @onchange="(e)=>{SRCInputChange(e.Value.ToString());}"/>
                            <div class="maxBTN-Zone">
                                <button @onclick="maxBTN" class="maxBTN" data-i18n="Inventory_data:SWAP.MAX">MAX</button>  
                            </div>
                        </div>
                        @if (BalanceShort)
                        {                        
                            <div class="balanceShort">
                                <svg class="balanceShort-icon" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 30.783 29.005">
                                    <g id="warning-outline" transform="translate(-2.609 -3.497)">
                                        <path id="Path_4" data-name="Path 4" d="M6.017,31.377H29.984a2.25,2.25,0,0,0,1.981-3.317L19.981,5.806a2.251,2.251,0,0,0-3.963,0L4.036,28.06a2.25,2.25,0,0,0,1.981,3.317Z" fill="none" stroke="#ec847b" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.25"/>
                                        <path id="Path_5" data-name="Path 5" d="M17.6,13.738l.4,8.578.4-8.575A.4.4,0,0,0,18,13.319h0a.4.4,0,0,0-.4.418Z" fill="none" stroke="#ec847b" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.25"/>
                                        <path id="Path_6" data-name="Path 6" d="M18,27.932a1.406,1.406,0,1,1,1.406-1.406A1.406,1.406,0,0,1,18,27.932Z" fill="#ec847b"/>
                                    </g>
                                </svg>

                                餘額不足
                            </div>
                        }
                    
                </div>

                <div class="coin-Zone">
                    <div class="arrow-zone">
                        <img class="arrow-img" src="/images/Myprofile/SRCExchange/Arrow.png"/>
                        @* <button class="maxBTN miniSizeBtn">MAX</button> *@
                       @*     <p class="coinView-Minimum miniSizeBtn">
                                Minimum: 1 SRC
                            </p>*@
                    </div>
                </div>
                <div class="coin-Zone">         
                    @*<input class="coin-Num" value=@USDTInput @onchange="(e)=>{USDTInputChange(e.Value.ToString());}"/>*@
                    <div class="coin-swapRate" id="usdtPerSRCRate"> 1 SRC ≈$ @SwapRate USDT</div>
                    
                    <div class="coin-Num-block">
                        <div  class="coin-Num" >@USDTInput </div>
                        <div class="maxBTN-Zone">
                            @* <button @onclick="maxBTN" class="maxBTN" data-i18n="Inventory_data:SWAP.MAX">MAX</button>   *@
                        </div>
                    </div>
                </div>
            </div>
            @*最大按鈕區塊*@
            @* <div class="coin-MaxZone">
                    <div class="coin-Zone">
                    <div class="maxBTN-Zone">
                       <button @onclick="maxBTN" class="maxBTN" data-i18n="Inventory_data:SWAP.MAX">MAX</button>
                       
                    </div>
                    
                    </div>
            </div> *@
        </div>
       
    </div>
    <div class="Btn-container">
        @*<button @onclick = "SwapToggleClick" > toggle exchange</button>*@

        @if (Value)
        {
          
            <button id="SwapBTN" class="SwapBTN" hidden = "@BalanceShort" data-i18n="Inventory_data:SWAP.Swap">Swap</button>          
            <div class="SwapBTN SwapBTN-black" hidden = "@(!(BalanceShort))" data-i18n="Inventory_data:SWAP.Swap">Swap</div>                   

            @*@if(!(netWorkRight)){<button class="greenBTN" @onclick="AddPolygon" > <span data-i18n="Inventory_data:SWAP.SwitchYoMetWorkName">Switch to </span>@netWorkName </button>} *@
        }
        else
        {
            <button class="greenBTN" @onclick="loginButtonClick" data-i18n="Inventory_data:SWAP.ConnectToGame">Connect to Game</button>
        }


     

    </div>

</div>




@*錯誤訊息*@

@if (Value )
{
    <ErrorNetwork AddPolygon ="AddPolygon" ></ErrorNetwork>
}

@*彈窗*@

<ProductsPopup Value="#SwapBTN"  Confirm ="confirm">       
    <span data-i18n="Inventory_data:SWAP.ComfirmToSwap">Comfirm to Swap</span>  <span> @SRCInput </span> SRC to <span>  @USDTInput </span>  USDT?       
</ProductsPopup>

 @*交易中反灰*@
 <TransactWindow></TransactWindow>
 @*
 @if(SwapToggle){

 }else{
<ProductsPopup Value="#SwapBTN"  Confirm ="confirm">            
        Comfirm to Swap <span> @USDTInput </span> USDT to <span> @SRCInput </span>  SRC?      
</ProductsPopup>
}*@


@if (loading&&Value)
{
    <FectchDataLoading />    
}







@code {

    decimal[] web3jsData ;

    [Parameter]
    public  bool  Value { get; set; }
    private IJSObjectReference? coinEchangeJS;   

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            netWorkName = BlockChainSever.BlockChainInfoDTO.blockChain;
            await JS.InvokeVoidAsync("TippyInit");


            if (Value)
            {
                await getMetaMaskData();
                coinEchangeJS = await JS.InvokeAsync<IJSObjectReference>("import","./JavaScript/MyProfile/InventoryAndMarketPlace/coinEchange.js");
            }



            if (loading == true)
            {
                loading = false;
                //強制渲染
                InvokeAsync(StateHasChanged);
            } 


        }
    }

    bool nextTime;
    protected async Task confirm(){ 
        await coinEchangeJS.InvokeVoidAsync("lockWindowsShow");

        var USDT_token_addr = BlockChainSever.BlockChainInfoDTO.usdtAddress;
        var SRC_token_addr = BlockChainSever.BlockChainInfoDTO.contractAddress_SRC;
        var SRCSwap_addr = BlockChainSever.BlockChainInfoDTO.contractAddress_SRCSwap;

        nextTime =  await JS.InvokeAsync<bool>("web3JSConfirm",true,SRCInput,USDTInput,USDT_token_addr,SRC_token_addr,SRCSwap_addr  );
        if (nextTime)
        {
            await getMetaMaskData();
            //強制渲染
            await InvokeAsync(StateHasChanged);

        }
        await coinEchangeJS.InvokeVoidAsync("lockWindowsHide");
    }

    decimal SRCTotal = 0;
    decimal USDTTotal = 0;

    decimal SRCInput = 0;
    decimal USDTInput = 0;
    decimal SwapRate = 0;
    bool loading = true;
   
    string netWorkName = "Rinkeby";
    bool BalanceShort =false;
    public void SRCInputChange(string value)
    {

        if (value == null || value == "") value = "0";
        SRCInput = decimal.Parse(value);
        USDTInput = SRCInput * SwapRate;
        if (SRCTotal < decimal.Parse(value)){
            BalanceShort = true;          
        }
        else
        {
            BalanceShort = false;  
        }

    }

    public void USDTInputChange(string value)
    {
        if (value == null || value == "") value = "0";
        USDTInput = decimal.Parse(value);
        SRCInput = USDTInput / SwapRate;
    }

    //取得現在比率、SRCT總數、USDT總數
    public async Task  getMetaMaskData()
    {     


        int chainId = BlockChainSever.BlockChainInfoDTO.chainId;
        var USDT_token_addr = BlockChainSever.BlockChainInfoDTO.usdtAddress;
        var SRC_token_addr = BlockChainSever.BlockChainInfoDTO.contractAddress_SRC;
        var SRCSwap_addr = BlockChainSever.BlockChainInfoDTO.contractAddress_SRCSwap;
        var socketServerUri = BlockChainSever.BlockChainInfoDTO.socketServerUri;
        web3jsData = await JS.InvokeAsync<decimal[]>("web3JS" ,chainId ,USDT_token_addr,SRC_token_addr,SRCSwap_addr ,socketServerUri  );
        SwapRate = web3jsData[2] ;
        SRCTotal = web3jsData[0] ;
        USDTTotal = web3jsData[1] ;


    }

    public void maxBTN()
    {
        if (Value)
        {
            SRCInput = SRCTotal;
            SRCInputChange(SRCInput.ToString());
        }
        else
        {
            JS.InvokeVoidAsync("loginButton", "loginButton");
        }




    }



    //切換並新增Polygon
    protected  async Task AddPolygon()
    {
        @*linebot.SemdLineNotifyMsg("test123");*@
        int chainId = BlockChainSever.BlockChainInfoDTO.chainId;
        var chainName = BlockChainSever.BlockChainInfoDTO.blockChain;
        var recUrls = BlockChainSever.BlockChainInfoDTO.chainRPCUrl;
        var nativeCurrencyName = BlockChainSever.BlockChainInfoDTO.nativeCurrencyName;
        int nativeCurrencyDecimals = BlockChainSever.BlockChainInfoDTO.nativeCurrencyDecimals;

        await JS.InvokeVoidAsync("AddPolygonID",chainId, chainName, recUrls,  nativeCurrencyName, nativeCurrencyDecimals);  
        
        await getMetaMaskData();

    }


    ////新增登入功能
    private async Task loginButtonClick()
    {

        await JS.InvokeVoidAsync("loginButton", "loginButton");

    }
    //新增USDT
    protected  async Task AddUSDT()
    {
        if (Value)
        {
            
            var USDT_token_addr = BlockChainSever.BlockChainInfoDTO.usdtAddress;
            int USDT_Decimals = BlockChainSever.BlockChainInfoDTO.usdtDecimals;
            await JS.InvokeVoidAsync("AddPolygonUSDT" , USDT_token_addr ,USDT_Decimals);
        }
        else
        {
            await JS.InvokeVoidAsync("loginButton", "loginButton");
        }

    }
    //新增SRC錢包
    protected  async Task AddSRC()
    {      
        if (Value)
        {
            var SRC_token_addr = BlockChainSever.BlockChainInfoDTO.contractAddress_SRC;
            int SRC_Decimals = BlockChainSever.BlockChainInfoDTO.srcDecimals;
            await JS.InvokeVoidAsync("AddPolygonSRC" ,SRC_token_addr ,SRC_Decimals );     
        }
        else
        {
            await JS.InvokeVoidAsync("loginButton", "loginButton");
        }
             

    }

   
    
}
