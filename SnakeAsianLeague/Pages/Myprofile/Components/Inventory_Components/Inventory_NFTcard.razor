@using SnakeAsianLeague.Data.Entity
@using SnakeAsianLeague.Data.Services.MarketPlace
@inject IJSRuntime JS

@*愛心的部分*@
<div class="heart btn p-0 tippy-pop" data-content="Favorite">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22.001 20.005" >
        <path class="heart__path"
        d="M11.445,20.761,3.576,12.566a5.762,5.762,0,0,1,.3-8.217,5.243,5.243,0,0,1,7.807.892L12,5.677l.314-.436a5.243,5.243,0,0,1,7.807-.892,5.762,5.762,0,0,1,.3,8.217l-7.869,8.194A.763.763,0,0,1,11.445,20.761Z"
        transform="translate(-0.999 -1.995)" stroke-linecap="round" stroke-linejoin="round"
        stroke-width="2" />
     </svg>                                    
</div>

<a class="NFTcardA" href="Products/@Value.serialNumber/@Value.TokenID" >
    @*<a href="@Value.LinkURL" target="opensea">  </a>*@

    <div class="NFTcard-inner">
        <div class="NFT-cardImg">
            <img src="@Value.ImgPath" alt=""  onerror="this.src='/images/MarketPlace/NFTproduct.webp'">
            <div class="NFTcard-remark tippy-pop" data-content="This PPSR is temporarily under maintenance." data-i18n="Inventory_data:NFTDetails.UnderMaintenance;[data-content]Inventory_data:NFTDetails.PPSRmaintenance">Under Maintenance</div>
        </div>

        <div class="NFT-cardText Not-Price-Ver">


            <div class="NFT-card-header">
                <img  class="NFT-ElementsIcon" src="@Value.ElementsIcon" alt="">
                <div class="NFT-Number"  > @Value.Number.Substring(0, 5) # @Value.Number.Substring(6)</div>
            </div>
            <div class="NFT-Name"  data-i18n=NFT_data:@Value.serialNumber>
                @Value.serialNumber
            </div>


                @*.................首拍拿掉的部分...................... *@
            @if (Value.IsOpen)
            {                
                <div class="rent-container"  >
                    <div class="rent-left">
                        

                        @if(Value.rentType == 1)
                        {
                            <img src="/images/Myprofile/gold.png">
                        }else if (Value.rentType == 22)
                        {
                            <img src="/images/MarketPlace/SRC.webp"/>
                        }

                    </div>
                    <div class="rent-right">

                       


                        <p class="fee-Text" ><span data-i18n="Inventory_data:otherTitle.RentalFee"> Rental Fee: </span> <span>  @Value.nowRent </span> </p>
                        <p class="balance-Text" ><span data-i18n="Inventory_data:otherTitle.Balance">Balance:</span> <span>  @Value.totalRevenue </span> </p>
                    </div>
                </div>
                @if (Value.totalRevenue != 0)
                {
                        <div class="CollectBtn-Container">
                            <button  class="Collect-Btn" @onclick="  (eventArgs)  =>  { 
                               clicksetValueByUnit( Value.TokenID , Value.totalRevenue, eventArgs ); 
                               ReceiveRentByUnit();  
                            }" 
                            data-i18n="Inventory_data:otherTitle.CollectIncome"
                            >Collect Income</button>
                    </div>
                }
                else
                {
                        <div class="CollectBtn-Container">
                            <button  class="Collect-Btn-Finish" data-i18n="Inventory_data:otherTitle.NoBalance">No Balance</button>
                    </div>
                }
                                                     
                    @*....................................... *@
                <div class="NFT-Income-Block">
                        @*<div class="NFT-Income-Block-title">Total Income</div>
                    <div class="NFT-Income-Main">
                        <div class="NFT-Income-Currency">
                            <span>SRC</span>
                            <img class="NFT-Income-Currency-Icon" src="/images/MarketPlace/SRC.webp" alt="">
                        </div>
                        <span class="NFT-Currency-Price">123,456,789</span>
                    </div>*@
                </div>
            }
            @*灰色的*@
            @if (!(Value.IsOpen))
            {
                
            <div class="NFT-PriceBlock">
                <div class="NFT-PriceMain">
                                            
                    <span class="NFT-Price" data-i18n="Inventory_data:sortOptions.ComingSoon">ComingSoon</span>
                </div>
                @*  <div class="NFT-USD">231269.89 USD</div>*@
            </div>
            }

                    @*.................首拍拿掉的部分...................... *@
            <button  class="Show-tag" @onclick="reInstallI18n"><span class="ShowTag-Text" data-i18n="Inventory_data:otherTitle.ShowTag">Show Tag</span>   <img   class="ShowTag-arrow" src="/images/MarketPlace/MP-arrow-gray.png" data-src="/images/MarketPlace/MP-arrow-gray.png">  </button>
                            @*....................................... *@
        </div>                                                   
    </div>                                                  
</a>

<div class="tag-zone">                                                   
        <div class="NFT-Label-block">
            <div class="NFT-Label" data-i18n="Inventory_data:Filter.@Value.RarityValue">@Value.RarityValue</div>
        </div>
</div>

@code {
    [Parameter]
    public NFTData Value { get; set; }

    [Parameter]
    public EventCallback<NFTCardData>  setValueByUnit { get; set;}
  
    NFTCardData NFTCard =new NFTCardData();

    private void clicksetValueByUnit(string TokenID ,decimal totalRevenue,object eventArgs)
    {
         NFTCard.getData(TokenID, totalRevenue, eventArgs);
         setValueByUnit.InvokeAsync(NFTCard);   
    }

    [Parameter]
    public EventCallback ReceiveRentByUnitOnclick { get; set;}

    private void ReceiveRentByUnit()
    {
        ReceiveRentByUnitOnclick.InvokeAsync();   
    }

    //重載多語系
    public async Task reInstallI18n() { 
        await JS.InvokeVoidAsync("installI18n");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
          await JS.InvokeVoidAsync("NFTcardAClick");   
          await JS.InvokeVoidAsync("CollectBtnPoP");  
          await JS.InvokeVoidAsync("showTag");
        }
    }

      
}
