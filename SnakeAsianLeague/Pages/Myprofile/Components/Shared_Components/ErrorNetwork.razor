@using SnakeAsianLeague.Data.Services.BlockChain
@inject IJSRuntime JS
@inject IConfiguration Configuration
@inject BlockChainProcessorSever BlockChainSever
<head>
    <link href="css/MyProfile/shared/ErrorNetwork.css" rel="stylesheet" />     
  
</head>


<div class="errorContainer" hidden="@netWorkRight">
    <div class="errorNav"> 
        <p data-i18n="Inventory_data:SWAP.WrongNetwork">Wrong Network</p>
        <button  @onclick="AddPolygonClick"><span data-i18n="Inventory_data:SWAP.SwitchYoMetWorkName">Switch to</span> @netWorkName </button>
    </div>
</div>
@code {
    [Parameter]
    public EventCallback<int> AddPolygon { get; set;}   

    [Parameter]
    public EventCallback getCoinData { get; set;}   

    private IJSObjectReference? ErrorNetworkJS;

    string netWorkName;
    bool netWorkRight =false;
    private async Task AddPolygonClick()
    {
        await AddPolygon.InvokeAsync();
        await checkNetwork();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            netWorkName = BlockChainSever.BlockChainInfoDTO.blockChain;
            ErrorNetworkJS = await JS.InvokeAsync<IJSObjectReference>("import", "./JavaScript/MyProfile/ErrorNetwork.js");
            await checkNetwork();
        }
    }

    public async Task checkNetwork()
    {
        int chainId = BlockChainSever.BlockChainInfoDTO.chainId;
        netWorkRight = await ErrorNetworkJS.InvokeAsync<bool>("ErrorNetwork", chainId);
        if (netWorkRight)
        {
            getCoinData.InvokeAsync();
            //強制渲染
            await InvokeAsync(StateHasChanged);
        }
    }


}
