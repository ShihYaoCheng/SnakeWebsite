@page "/myprofile/{router}"
@using SnakeAsianLeague.Data.Services
@using SnakeAsianLeague.Pages.Myprofile.Components
@using SnakeAsianLeague.Pages.Myprofile.Components.Shared_Components
@inject AppState AppState
@inject IJSRuntime JS

<head>
    <link href="css/MyProfile/Myprofile.css" rel="stylesheet" /> 
    <link href="css/NFTFilter.css" rel="stylesheet" />
    <title>PonPonSnake 碰碰蛇｜MyPage Account</title>
</head>


<AuthorizeView>
    <Authorized>
 
        <MyprofileSidebar /> 
        @switch (router)
        {
            case "index":
                <MyProfile_Index />
                break;
            case "mymatch":
                <MyProfile_MyMatch />
                break;
            case "myawardnotice":
                 <MyProfile_MyAwardNotice/>
                break;      
            case "inventory":
                 <CascadingValue Value=true>
                     <GettingStartMetaMask>
                        <Inventory />
                     </GettingStartMetaMask>                 
                 </CascadingValue>
                break;      
            case "swapsrc":    
                    <GettingStartMetaMask>
                         <MyProfile_Swap Value=true/> 
                    </GettingStartMetaMask>  
                break;     
            case "srcgift":        
                <CascadingValue Value=true>
                    <GettingStartMetaMask>
                        <MyProfile_SRCgift /> 
                    </GettingStartMetaMask>   
                </CascadingValue>
                break;     
        }

    </Authorized>
    <NotAuthorized>
        @* <div class="myprofileLogin">
            <h1>Please Login First</h1>
        </div> *@
        <MyprofileSidebar /> 
        @switch (router)
        {
            case "index":
                <MyProfile_Index />
                break;
            case "mymatch":
                <MyProfile_MyMatch />
                break;
            case "myawardnotice":
                 <MyProfile_MyAwardNotice/>
                break;      
            case "inventory":
                <CascadingValue Value=false>
                    <Inventory />
                 </CascadingValue>
                break;  
           case "swapsrc":
                 <MyProfile_Swap Value=false/>
                 break;
            case "srcgift":
                <CascadingValue Value=false>
                    <MyProfile_SRCgift /> 
                </CascadingValue>
              
                break;    
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string router { get; set; } = "index";

    protected override async Task OnInitializedAsync()
    {
        //AppState.langChanged += async (value)
        //=> await InvokeAsync(StateHasChanged);
    }
        protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {         
            await JS.InvokeVoidAsync("installI18n");
        }
    }
}
