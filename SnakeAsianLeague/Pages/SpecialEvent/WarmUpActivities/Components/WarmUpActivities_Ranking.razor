@using SnakeAsianLeague.Data.Entity.SnakeServer
@using SnakeAsianLeague.Data.Services.WarmUpActivities
@inject IJSRuntime JS
@inject WarmUpActivitiesService WarmUpActivitiesService
<head>
    <link href="/css/SpecialEvent/WarmUpActivities/WarmUpActivities_Ranking.css" rel="stylesheet" />
</head>

<div class="WarmUpActivities_Ranking" id="WarmUpActivities_Ranking">
    @* <div class="WarmUpActivities-Title" data-i18n="WarmUpActivities_data:ranking.title">
        Ranking
    </div> *@

    <div class="WarmUpActivities-CenterBlock">

        <div class="Ranking-Block">
            <div class="Ranking-Content">
                <div class="Ranking-Content-Title text-shadow-brown" data-i18n="WarmUpActivities_data:ranking.title-02">Current Top 50</div>

                <div class="Ranking-List">


                    @if(Leaderboard.TotalLeaderboard != null) 
                    {
                        @*var index = 0;*@
                        @foreach (var item in Leaderboard.TotalLeaderboard)
                        {
                            @*index++;*@
                            <div class="Ranking-Row" hidden="@(false)">
                                <div class="Ranking-Number text-shadow-big"> @item.Ranking </div>
                                <div class="Ranking-Data">
                                    <div class="Player-Name">@item.UserSocial.Name</div>

                                    <div class="Ranking-ERNC">
                                        <div class="ERNC-Amount">ERNC: <span>@item.Count.ToString("0.00000")</span></div>
                                        <img class="Ranking-ERNC-icon" src="/images/SpecialEvent/WarmUpActivities/ERNC.png" />
                                    </div>                            
                                </div>
                            </div>
                        }

                      
                    @*    <div class="Ranking-ComingSoon">
                            <span data-i18n="WarmUpActivities_data:ranking.ComingSoon">Coming Soon</span>
                        </div>*@

                    }
                    else
                    {
                       

                        <div class="Ranking-ComingSoon">
                            <span data-i18n="WarmUpActivities_data:ranking.ComingSoon">Coming Soon</span>
                        </div>

                    }
                   

        
                </div>
            </div>

        </div>
    </div>
</div>


@code {

    private IJSObjectReference? WarmUpActivitiesJS;
    List<LeaderboardDTO> LeaderboardList = new List<LeaderboardDTO>();
    LeaderboardDTO  Leaderboard= new LeaderboardDTO();
    protected override async Task OnInitializedAsync()
    {
        //await Refresh();
    }

    public async Task Refresh()
    {
        LeaderboardList = await WarmUpActivitiesService.GetLeaderboard();
        Leaderboard = LeaderboardList[0];
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)  
    {

        if (firstRender)
        {

            WarmUpActivitiesJS = await JS.InvokeAsync<IJSObjectReference>("import", "./JavaScript/SpecialEvent/WarmUpActivities.js");
            await WarmUpActivitiesJS.InvokeVoidAsync("WarmUpActivitiesStep");

        }

    }
}