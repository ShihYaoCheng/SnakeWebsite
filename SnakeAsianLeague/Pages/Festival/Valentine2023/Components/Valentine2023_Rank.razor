@using SnakeAsianLeague.Data.Entity.SnakeServer
@using SnakeAsianLeague.Data.Services.SnakeServerService
@inject IJSRuntime JS
@inject AsiaLeagueScheduleService AsiaLeagueScheduleService
@inject AsiaLeaguePlaceService AsiaLeaguePlaceService


<head>   
    <link href="/css/Festival/Valentine2023/Valentine2023_Rank.css" rel="stylesheet" />
</head>

<div class="Valentine2023_Rank">
    <div class="Valentine2023-container">
        <div class="Valentine2023_Rank-container">

        
            <div class="Valentine2023-title" id="Valentine2023-title-Ranking">
                <span  data-i18n="Valentine2023_data:ranking.title">＝Ranking＝</span>
            </div>

            <div class="toggleRankTypeButton-container">
                <button class="rank_type_button_solo"  @onclick=@(()=>toggleRankType(1)) style="background: url(@RandButtonSolo) round;"　data-i18n="Valentine2023_data:ranking.soloRace" > 單人賽 </button>
                <button class="rank_type_button_squad" @onclick=@(()=>toggleRankType(2)) style="background: url(@RandButtonSquad) round;" data-i18n="Valentine2023_data:ranking.squadRace"> 團體賽 </button>
            </div>
            <div class="Valentine2023_Rank_content">
                <div class="select-container">
                    <select value=@selectValue @onchange="@(async (e)=>{await changeSelect( int.Parse(e.Value.ToString()) );})">
                        @if (nowOptionData != null )
                        {                           
                           @foreach(var item in nowOptionData){
                                <option value="@item.station"><span data-i18n="NewYear2023_data:@item.i18n"></span> @item.station <span  data-i18n="NewYear2023_data:Valentine2023Rank.ranking.turn"></span> @item.innerHTML </option>
                           } 
                        }  
                    </select>
                </div>
                <div class="rank-content">
                    @if (rankList != null && rankList.Count != 0 )
                    {
                        @foreach(var item in rankList)
                        {
                            <div class="rank rank@(item.Place)">
                                <img src="/images/Festival/Valentine2023/Rank/crown@(item.Place).png"/>
                                <span>@item.WinnerName </span>
                            </div>
                        }
                    }else{
                         <div class="Ranking-ComingSoon">
                            <span data-i18n="Valentine2023_data:ranking.ComingSoon">Coming Soon</span>
                        </div>
                    }
             
             @*               <div class="rank rank1">
                                <img src="/images/Festival/Valentine2023/Rank/crown1.png"/>
                                <span>1 </span>
                            </div>
                            <div class="rank rank2">
                                <img src="/images/Festival/Valentine2023/Rank/crown2.png"/>
                                <span>2 </span>
                            </div>
                            <div class="rank rank3">
                                <img src="/images/Festival/Valentine2023/Rank/crown3.png"/>
                                <span>3 </span>
                            </div>*@
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    int RankType = 1;
    int selectValue = 1;
    string RandButtonSquad = "/images/Festival/Valentine2023/Rank/rank_type_button2.png";
    string RandButtonSolo = "/images/Festival/Valentine2023/Rank/rank_type_button1.png";
    public async Task toggleRankType(int value)
    {
        RankType = value;
        if (value == 1)
        {
            RandButtonSquad = "/images/Festival/Valentine2023/Rank/rank_type_button2.png";
            RandButtonSolo = "/images/Festival/Valentine2023/Rank/rank_type_button1.png";
        }
        else
        {
            RandButtonSquad = "/images/Festival/Valentine2023/Rank/rank_type_button1.png";
            RandButtonSolo = "/images/Festival/Valentine2023/Rank/rank_type_button2.png";            
        }
        nowOptionData = value == 1 ? soloOptionData : squadOptionData;
    
        await changeSelect(1);
        
    }
    //Schedules ����A soloOptionData ��H�M�ɤ���C���AsquadOptionData ��H�M�ɤ���C���AnowOptionData �ϥΪ̿��
    List<AsiaLeagueSchedule> Schedules;
    List<OptionDTO> soloOptionData  = new List<OptionDTO>();
    List<OptionDTO> squadOptionData  = new List<OptionDTO>();
    List<OptionDTO> nowOptionData;
    List<AsiaLeaguePlace> rankList;
    protected override async Task OnInitializedAsync()
    {
        Schedules = await AsiaLeagueScheduleService.GetAsiaLeagueSchedulesAsync(AsiaLeagueSeasons.NewYear2023);
        await optionDateList();
        await changeSelect(1);
        
    }
    private async Task optionDateList()
    {       
        List<AsiaLeagueSchedule> soloEndDay = Schedules.Where(w => w.IndFinalType == 0).ToList();
        List<AsiaLeagueSchedule> squadEndDay = Schedules.Where(w => w.GuildFinalType == 1).ToList();

        foreach(var item in soloEndDay)
        {
            OptionDTO soloOption = new OptionDTO();
            soloOption.i18n = "Valentine2023Rank.ranking.solo";
            soloOption.innerHTML =  item.Date.ToString("yyyy/MM/dd");
            soloOption.station = item.IndStation.ToString();
            soloOptionData.Add(soloOption);
        }

        foreach(var item in squadEndDay)
        {
            OptionDTO squadOption = new OptionDTO();
            squadOption.i18n = "Valentine2023Rank.ranking.squad";
            squadOption.innerHTML = item.Date.ToString("yyyy/MM/dd");
            squadOption.station = item.GuildStation.ToString();
            squadOptionData.Add(squadOption);
        }
        nowOptionData = soloOptionData;

    }


    public async Task changeSelect(int value)
    {
        selectValue = value;
        bool RankOptionIsGuild = RankType == 2 ?true: false ;      
        rankList  = await AsiaLeaguePlaceService.GetAsiaLeaguePlacesByIsGuildAndStation(AsiaLeagueSeasons.NewYear2023 ,RankOptionIsGuild , value );
        await InvokeAsync(StateHasChanged);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("installI18n");
    }
}